name: Pipeline

on:
  push:
    branches:
      - test
      - main
  workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  ENVIRONMENT: ${{ github.ref_name == 'main' && 'prod' || github.ref_name == 'test' && 'test' }}
  AWS_REGION: eu-west-1
  SAM_CLI_TELEMETRY: 0

jobs:
  unit-test:
    runs-on: ubuntu-latest
    if: github.ref_name == 'test'
    steps:
      - uses: actions/checkout@v3

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      # Install dependencies
      - name: Set up Python
        run: uv python install
      - name: Install the project
        run: uv sync --group test

      # Run unit tests
      # - name: Run tests
      #   run: uv run pytest -s .

  deploy:
    runs-on: ubuntu-latest
    needs: unit-test
    steps:
      - uses: actions/checkout@v3

      # Cache SAM build artifacts
      - name: Cache SAM build artifacts
        id: cache-sam-build
        uses: actions/cache@v3
        with:
          path: .aws-sam/build
          key: ${{ runner.os }}-sam-build-${{ hashFiles('template.yaml', 'src/**/*', 'samconfig.yaml') }}
          restore-keys: |
            ${{ runner.os }}-sam-build-

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::639269844451:role/github-actions
          role-session-name: testing-deployment

      - name: Setup SAM
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      # Build inside Docker containers
      - name: Build SAM Application
        if: ${{ steps.cache-sam-build.outputs.cache-hit != 'true' }}
        run: sam build --config-env ${{ env.ENVIRONMENT }}

      # Package SAM Application
      - name: Package SAM Application
        run: sam package --config-env ${{ env.ENVIRONMENT }}

      # Prevent prompts and failure when the stack is unchanged
      - name: Deploy SAM Application
        run: sam deploy --config-env ${{ env.ENVIRONMENT }}

  integration-test:
    runs-on: ubuntu-latest
    if: github.ref_name == 'test'
    needs: deploy
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: arn:aws:iam::639269844451:role/github-actions
          role-session-name: testing-integration

      - name: Run integration test
        env:
          FUNCTION_NAME: ${{ env.ENVIRONMENT }}-youtube-comment-sentiment-analysis
        run: |
          aws lambda invoke \
            --function-name ${{ env.FUNCTION_NAME }} \
            --cli-binary-format raw-in-base64-out \
            --payload file://events/event.json \
            output.json
          cat output.json | jq
